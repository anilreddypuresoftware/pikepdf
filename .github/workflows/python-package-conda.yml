name: Python Package using Conda

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version:  3.8
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda create -q -y --name testenv  python=3.8 cython numpy pytest psutil pip
        conda install -c conda-forge pip numpy scipy coverage scikit-learn!=0.19.0 matplotlib numba ffmpeg libsndfile pysoundfile coveralls
    
    - name: Test with pytest
      run: |
        conda install pytest
        python -m pip install tomli
        python build-scripts/environ-from-pyproject.py
      
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools wheel build
        python -m build --sdist
        python -m venv v
        source v/bin/activate
        
        SDIST_EXPANDED=$(echo -n $SDIST)
        python -m pip install --upgrade pip
        pip install pikepdf
        pip install hypothesis
      
        pip install psutil
        pip install pytest
        python -m pytest 

  armv64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install libqpdf-dev jbig2dec lcov git python3 python3-pip python3-venv curl && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              cd qpdf
              ./configure --disable-oss-fuzz && make install-libs && \
              cd ..
              python setup.py install && \
              python -m pip install tomli && \
              python build-scripts/environ-from-pyproject.py && \
              python -m pip install --upgrade pip && \
              python -m pip install --upgrade setuptools wheel build && \
            
              python -m venv v && \
              source v/bin/activate && \
            
              SDIST_EXPANDED=$(echo -n $SDIST) && \
              python -m pip install --upgrade pip  && \
              
              pip install hypothesis && \
              pip install lxml && \
              pip install psutil && \
              pip install pytest && \
              pip install pikepdf && \
              python -m pytest  && \
              deactivate'
